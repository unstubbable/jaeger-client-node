{"version":3,"sources":["../../../test/samplers/sampling_state.js"],"names":["describe","it","s","SamplingState","es","extendedState","assert","equal","localRootSpanId","ctx1","SpanContext","withStringIds","ctx2","isLocalRootSpan","isFinal","setFinal","isFirehose","setFirehose","flags"],"mappings":";;AAaA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,eAAT,EAA0B,YAAM;AAC9BC,KAAG,8BAAH,EAAmC,YAAM;AACvC,QAAIC,IAAI,IAAIC,wBAAJ,EAAR;AACA,QAAIC,KAAKF,EAAEG,aAAF,EAAT;AACAD,OAAG,UAAH,IAAiB,EAAE,wBAAwB,YAA1B,EAAjB;AACAE,iBAAOC,KAAP,CAAa,YAAb,EAA2BL,EAAEG,aAAF,GAAkB,UAAlB,EAA8B,sBAA9B,CAA3B;AACD,GALD;AAMAJ,KAAG,kCAAH,EAAuC,YAAM;AAC3C,QAAIC,IAAI,IAAIC,wBAAJ,CAAkB,OAAlB,CAAR;AACAG,iBAAOC,KAAP,CAAa,OAAb,EAAsBL,EAAEM,eAAF,EAAtB;AACA,QAAIC,OAAOC,uBAAYC,aAAZ,CAA0B,EAA1B,EAA8B,OAA9B,EAAuC,IAAvC,EAA6C,CAA7C,CAAX;AACA,QAAIC,OAAOF,uBAAYC,aAAZ,CAA0B,EAA1B,EAA8B,SAA9B,EAAyC,IAAzC,EAA+C,CAA/C,CAAX;AACAL,iBAAOC,KAAP,CAAa,IAAb,EAAmBL,EAAEW,eAAF,CAAkBJ,IAAlB,CAAnB;AACAH,iBAAOC,KAAP,CAAa,KAAb,EAAoBL,EAAEW,eAAF,CAAkBD,IAAlB,CAApB;AACD,GAPD;AAQAX,KAAG,8BAAH,EAAmC,YAAM;AACvC,QAAIC,IAAI,IAAIC,wBAAJ,EAAR;AACAG,iBAAOC,KAAP,CAAa,KAAb,EAAoBL,EAAEY,OAAF,EAApB;AACAZ,MAAEa,QAAF,CAAW,IAAX;AACAT,iBAAOC,KAAP,CAAa,IAAb,EAAmBL,EAAEY,OAAF,EAAnB;AACAZ,MAAEa,QAAF,CAAW,KAAX;AACAT,iBAAOC,KAAP,CAAa,KAAb,EAAoBL,EAAEY,OAAF,EAApB;AACD,GAPD;AAQAb,KAAG,8BAAH,EAAmC,YAAM;AACvC,QAAIC,IAAI,IAAIC,wBAAJ,EAAR;AACAG,iBAAOC,KAAP,CAAa,KAAb,EAAoBL,EAAEc,UAAF,EAApB;AACAd,MAAEe,WAAF,CAAc,IAAd;AACAX,iBAAOC,KAAP,CAAa,IAAb,EAAmBL,EAAEc,UAAF,EAAnB;AACAV,iBAAOC,KAAP,CAAa,CAAb,EAAgBL,EAAEgB,KAAF,EAAhB;AACAhB,MAAEe,WAAF,CAAc,KAAd;AACAX,iBAAOC,KAAP,CAAa,KAAb,EAAoBL,EAAEc,UAAF,EAApB;AACAV,iBAAOC,KAAP,CAAa,CAAb,EAAgBL,EAAEgB,KAAF,EAAhB;AACD,GATD;AAUD,CAjCD;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sampling_state.js","sourcesContent":["// @flow\n// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nimport { assert } from 'chai';\nimport SamplingState from '../../src/samplers/v2/sampling_state';\nimport SpanContext from '../../src/span_context';\n\ndescribe('SamplingState', () => {\n  it('should support extendedState', () => {\n    let s = new SamplingState();\n    let es = s.extendedState();\n    es['sithlord'] = { 'something, something': 'dark force' };\n    assert.equal('dark force', s.extendedState()['sithlord']['something, something']);\n  });\n  it('should recognize local root span', () => {\n    let s = new SamplingState('id123');\n    assert.equal('id123', s.localRootSpanId());\n    let ctx1 = SpanContext.withStringIds('', 'id123', null, 0);\n    let ctx2 = SpanContext.withStringIds('', 'id12345', null, 0);\n    assert.equal(true, s.isLocalRootSpan(ctx1));\n    assert.equal(false, s.isLocalRootSpan(ctx2));\n  });\n  it('should support isLocal state', () => {\n    let s = new SamplingState();\n    assert.equal(false, s.isFinal());\n    s.setFinal(true);\n    assert.equal(true, s.isFinal());\n    s.setFinal(false);\n    assert.equal(false, s.isFinal());\n  });\n  it('should support firehose flag', () => {\n    let s = new SamplingState();\n    assert.equal(false, s.isFirehose());\n    s.setFirehose(true);\n    assert.equal(true, s.isFirehose());\n    assert.equal(8, s.flags());\n    s.setFirehose(false);\n    assert.equal(false, s.isFirehose());\n    assert.equal(0, s.flags());\n  });\n});\n"]}